providers = ["nodejs"]

[phases.setup]
# Install system dependencies required for Chromium and Puppeteer
nixPkgs = [
  # Core dependencies for Chromium
  "chromium",
  "nss",
  "freetype",
  "harfbuzz",
  "ca-certificates",
  "ttf-freefont",
  "fontconfig",
  
  # Additional dependencies for headless Chrome
  "glib",
  "gtk3",
  "libdrm",
  "libxss",
  "mesa",
  "xorg.libX11",
  "xorg.libXcomposite",
  "xorg.libXdamage",
  "xorg.libXext",
  "xorg.libXfixes",
  "xorg.libXrandr",
  "xorg.libxcb",
  "alsa-lib",
  "atk",
  "cups",
  "dbus",
  "expat",
  "libxkbcommon",
  "pango",
  "at-spi2-atk",
  "at-spi2-core",
  "cairo",
  "gdk-pixbuf",
  "libuuid",
  
  # Process and memory management
  "procps",
  "util-linux"
]

[phases.install]
# Set environment variables for Puppeteer and install dependencies
cmds = [
  "npm ci --only=production",
  # Skip Chromium download since we're using system Chromium
  "npm config set puppeteer_skip_chromium_download true"
]

[phases.build]
# Ensure data directory exists and set proper permissions
cmds = [
  "mkdir -p ./data",
  "mkdir -p ./user_data",
  "chmod 755 ./data",
  "chmod 755 ./user_data",
  "chmod +x start.js"
]

[start]
# Start the application using our production startup script
cmd = "npm run start-production"

[variables]
# Environment variables for Puppeteer in headless server environment
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD = "true"
PUPPETEER_EXECUTABLE_PATH = "/nix/store/*/bin/chromium"
# Force production mode for server environment
NODE_ENV = "production"
# Chrome optimization flags for headless server
CHROME_FLAGS = "--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-accelerated-2d-canvas --no-first-run --no-zygote --disable-gpu"

[build]
# Build configuration
buildCommand = "npm ci"
